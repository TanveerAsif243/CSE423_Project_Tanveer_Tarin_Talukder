from OpenGL.GL import *
from OpenGL.GLUT import *
from OpenGL.GLU import *
import random, math, json, os

# Window / camera / scene
WINDOW_W, WINDOW_H = 1000, 800
ASPECT = WINDOW_W / float(WINDOW_H)

GRID_LENGTH = 1000
TILE_SIZE = 120

# Side wall placement & look
WALL_INSET = 150
WALL_HEIGHT = 150
WALL_COLOR_BASE = (0.20, 0.20, 0.22)

FOVY = 100

# Player and Enemy Scaling
PLAYER_SCALE = 3.0
ENEMY_SCALE = 2.0

# Game Constants
LEVEL_DISTANCE = 800
COLLECTIBLE_SPAWN_RATE = 1
OBSTACLE_SPAWN_RATE = 0.25

# Day/Night Changing pattern
DAYNIGHT_SPEED = 0.05
_daynight_phase = 0.0
animation_counter = 0  # Replace glutGet(GLUT_ELAPSED_TIME)

# Global movement state for smooth movement
current_movement = {'left': 0, 'right': 0, 'forward': 0, 'backward': 0}

def _lerp(a, b, t):
    return a + (b - a) * t

def _mix_color(c1, c2, t):
    return (_lerp(c1[0], c2[0], t), _lerp(c1[1], c2[1], t), _lerp(c1[2], c2[2], t))

def update_daynight(dt):
    global _daynight_phase
    _daynight_phase = (_daynight_phase + dt * DAYNIGHT_SPEED * 2.0 * math.pi) % (2.0 * math.pi)

def get_day_brightness():
    base = 0.5 * (1.0 + math.cos(_daynight_phase - math.pi))
    return 0.35 + 0.65 * base

def get_sky_color():
    t = 0.5 * (1.0 + math.cos(_daynight_phase))
    day = (0.32, 0.65, 0.95)
    dusk = (0.55, 0.25, 0.55)
    night = (0.05, 0.07, 0.15)
    dawn = (0.95, 0.55, 0.25)
    if t > 0.66:
        u = (t - 0.66) / 0.34
        return _mix_color(day, dusk, u)
    elif t > 0.33:
        u = (t - 0.33) / 0.33
        return _mix_color(dawn, day, u)
    else:
        u = t / 0.33
        return _mix_color(night, dawn, u)

# Boss System (FIXED)
BOSS_LEVEL_INTERVAL = 3
BOSS_BASE_HEALTH = 5
boss = None
boss_spawned_levels = set()

# Combo / Multiplier System
COMBO_WINDOW = 4.0
COMBO_STEP = 5
MAX_MULTIPLIER = 5.0
combo_count = 0
combo_timer = 0.0
score_multiplier = 1.0
best_combo = 0
